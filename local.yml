version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ghostwriter_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ghostwriter_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:5-alpine

  queue:
    <<: *django
    image: ghostwriter_local_queue
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-queue

  graphql-engine:
    build:
      context: .
      dockerfile: ./compose/local/hasura/Dockerfile
    depends_on:
      - postgres
      - django
    restart: always
    ports:
      - "8080:8080"
      - "9691:9691"
    volumes:
      - ./hasura-docker/metadata:/metadata
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "10m"
    env_file:
      - ./.envs/.local/.postgres
      - ./.envs/.local/.hasura
    labels:
      NAME: "graphql"
    container_name: graphql
